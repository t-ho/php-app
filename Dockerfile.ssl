# Multi-stage build for production with assets
FROM node:20-slim AS node-builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies (including devDependencies for build)
RUN npm ci

# Copy source files
COPY assets/ ./assets/
COPY vite.config.js ./

# Build assets
RUN npm run build

# Production PHP image with SSL
FROM php:8.2-apache

RUN apt-get update && apt-get install -y \
    libsqlite3-dev \
    default-mysql-client \
    zip \
    unzip \
    git \
    && docker-php-ext-install pdo pdo_sqlite pdo_mysql \
    && rm -rf /var/lib/apt/lists/*

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Enable SSL and rewrite modules
RUN a2enmod rewrite ssl headers

WORKDIR /var/www/html

# Copy application files
COPY . .

# Copy built assets from node builder
COPY --from=node-builder /app/public/dist ./public/dist

# Install PHP dependencies for production
RUN composer install --no-dev --optimize-autoloader

RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 777 /var/www/html/public/uploads

# Copy Apache config templates
COPY apache-http-config.conf /var/www/html/
COPY apache-https-config.conf /var/www/html/

# Don't enable default-ssl site (we'll use our custom config)

EXPOSE 80 443

# Start script to handle SSL setup
COPY docker-entrypoint-ssl.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-ssl.sh

ENTRYPOINT ["docker-entrypoint-ssl.sh"]
CMD ["apache2-foreground"]